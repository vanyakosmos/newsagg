name: cicd

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Test on dev image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build dev image
        run: docker build -f Dockerfile.dev --platform=linux/amd64 -t newsagg:dev .

      - name: Test
        run: docker run --rm newsagg:dev go test ./...
  
  build:
    name: Build docker image and push to Artifact Registry
    runs-on: ubuntu-latest
    needs: [test]

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and tag
        run: |
          docker build . --platform=linux/amd64 -t "${{ vars.IMAGE_NAME }}:${{ github.sha }}"

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ vars.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ vars.GH_ACTIONS_SA }}"

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ vars.DOCKER_REGISTRY }} --quiet

      - name: Push to Artifact Registry
        run: |
          docker push "${{ vars.IMAGE_NAME }}:${{ github.sha }}"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ vars.GH_ACTIONS_SA }}"
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
      
      - name: Deploy with TF
        working-directory: deploy
        env:
          TF_VAR_image_tag: "${{ github.sha }}"
        run: |
          terraform init
          terraform fmt -check
          terraform validate
          terraform apply -auto-approve
